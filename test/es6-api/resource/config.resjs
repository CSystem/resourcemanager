var fs = require("fs");
var path = require("path");


exports.executeGulp = function(){

    var a = function(){
        console.log (arguments);
        console.log ('=====')
    }

    console.log ("gulp");
    var gulp = require("gulp")
    var webp = require('gulp-webp');
    gulp.src('resource/**/{*.jpg,*.png}').pipe(a()).pipe(gulp.dest('resource-publish/test3'))
   // gulp.src('resource/**/{*.json,*.fnt,*.pvr,*.mp3}').pipe(webp()).pipe(gulp.dest('resource-publish/test3'))
}

exports.groups = {
	"preload": [
		"bg_jpg"
	]
};
exports.alias = {
	"bg_jpg": "assets/bg.jpg"
};
exports.getTypeByFileExtensionName = function(ext) {
    var type;
    switch (ext) {
        case "png":
        case "jpg":
            type = "image";
            break;
        case "fnt":
            type = "font";
            break;
        case "mp3":
            type = "sound";
            break;
        case "pvr":
            type = "pvr";
            break;
    }
    return type;
}
exports.filter = function(file, env, plugins) {

    return new Promise((reslove, reject) => {
        var type;
        var doNotExportType = true;
        var ext = file.ext;
        var p = file.path;
        //console.log(file)
        type = exports.getTypeByFileExtensionName(ext);
        if (!type) {
            switch (ext) {
                case "json":
                    if (p.indexOf("sheet") >= 0) {
                        type = "sheet";
                    } else if (p.indexOf("movieclip") >= 0) {
                        type = "movieclip";
                    } else {
                        type = "json";
                    }
                    break;
            }
            doNotExportType = false;
        }
        if (type) {
            if (false) {
               
            }
            else {
                var url = p;//plugins.crc32(p) + "." + ext;
                //console.log(url)
                // plugins.add(url)
                if (doNotExportType) {
                    type = ""
                }
                reslove({ url, type, name: p });
            }
        }
        else {
            reslove(null);
        }
    });


}
exports.resources = {}

